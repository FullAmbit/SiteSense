<?php

function languages_dynamicForms_en_us(){
	return array(
		"returnToForms"                     => "Return To Forms",
		"returnToFields"                    => "Return To Fields",
		"returnToOptions" => "Return To Options",
		"deleteFormRejectHeading"           => "Form Deletion Error",
		"deleteFormRejectMessage"           => "",
		"deleteFormCancelledHeading"        => "Form Deletion Cancelled",
		"deleteFormSuccessMessage"          => "This form and all associated data has been deleted.",
		"deleteFormConfirmHeading"          => "Are you sure you want to delete this form?",
		"deleteFieldCancelledHeading"       => "Field Deletion Cancelled",
		"deleteFieldSuccessHeading"         => "Field Deleted",
		"deleteFieldSuccessMessage"         => "",
		"deleteFieldConfirmHeading"         => "",
		"deleteFieldConfirmHeading"         => "Are you sure you want to delete this field?",
		"deleteOptionCancelledHeading"      => "Option Deletion Cancelled",
		"deleteOptionSuccessMessage"        => "",
		"deleteOptionConfirmHeading"        => "Are you sure you want to delete this option?",
		"newForm"                           => "New Form",
		"noFormsExist"                      => "No forms exist",
		"manageFormsHeading"                => "Manage Forms",
		"requireLogin"                      => "Require Login?",
		"manageFields"                      => "Manage Fields",
		"viewData"                          => "View Data",
		"saveFormSuccessHeading"            => "Form Saved Successfully",
		"labelFormsName"                    => "Name",
		"descriptionFormsName"              => "Descriptions",
		"labelFormsTitle"                   => "Title",
		"descriptionFormsTitle"             => "The title of the form displayed at the top.",
		"labelFormsSubmitTitle"             => "Submit Title",
		"descriptionFormsSubmitTitle"       => "The text displayed on the submit button.",
		"labelFormsEmail"                   => "E-Mail",
		"descriptionFormsEmail"             => "Specify an email address to send submitted form data to. Multiple addresses should be seperated by commas with no spaces.",
		"labelFormsAPI"                     => "API Hook",
		"descriptionFormsAPI"               => "",
		"labelFormsShowOnMenu"              => "Create Menu Link",
		"descriptionFormsShowOnMenu"        => "Adds this static page to the main menu",
		"labelFormsMenuTitle"               => "Menu Title",
		"descriptionFormsMenuTitle"         => "If this element is to be shown on the menu, this is the text will be shown inside it's anchor.",
		"labelFormsRawContentBefore"        => "Raw Content Before",
		"descriptionFormsRawContentBefore"  => "What will the user read before the form?",
		"labelFormsRawContentAfter"         => "Raw Content After",
		"descriptionFormsRawContentAfter"   => "What will the user read after the form?",
		"labelFormsRawSuccessMessage"       => "Success Message",
		"descriptionFormsRawSuccessMessage" => "What do you want to display to the user when the form has been submitted?",
		"labelFormsRequireLogin"            => "Require Login?",
		"descriptionFormsRequireLogin"      => "Do you want the browser to redirect? Otherwise the user will see the original url but a different page.",
		"labelFormsTopLevel"                => "Top Level",
		"descriptionFormsTopLevel"          => "Check this if you want the url /form-name as an alternative to /forms/form-name",
		"labelFormsEnabled"                 => "Enabled",
		"submitFormsTitle"                  => "Submit Title",
		"captionFormsEditForm"              => "Edit Form",
		"type"                              => "Type",
		"options"                           => "Options",
		'addOption'                         => "Add Option",
		"addField"                          => "Add Field",
		"captionFormFieldsAddField"         => "Add Field",
		"labelFormFieldsName"               => "Name",
		"descriptionFormFieldsName"         => "What is the field called?",
		"labelFormFieldsDescription"        => "Description",
		"descriptionFormFieldsDescription"  => "This is the text that will appear in this sidebar. It is not required.",
		"labelFormFieldsType"               => "Type",
		"descriptionFormFieldsType"         => "What kind of input field is it?",
		"labelFormFieldsAPIFieldToMapTo"    => "API Field",
		"labelFormFieldsRequired"           => "Required",
		"labelFormFieldsEnabled"            => "Enabled",
		"labelFormFieldsIsEmail"            => "E-Mail Validation?",
		"labelFormFieldsCompareTo"          => "Compare To",
		"descriptionFormFieldsCompareTo"    => "Does the field have to match another?",
		"labelFormFieldsModuleHook"         => "Module Hook",
		"descriptionFormFieldsModuleHook"   => "Should another module process the data from this field?",
		"submitFormFields"                  => "Save Field",
		"saveFieldSuccessHeading"           => "Field Saved Successfully",
		"labelOptionsText" => "Text",
		"labelOptionsValue" => "Value",
		"noOptionsFound" => "No Options Found",
		"submitOptions" => "Save Option",
		"saveOptionSuccessHeading" => "Option Saved Successfully"
	);
}